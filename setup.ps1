# üöÄ –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è Windows
# Telegram-–±–æ—Ç-–∞–≥—Ä–µ–≥–∞—Ç–æ—Ä —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π

param(
    [switch]$SkipPyenv,
    [switch]$SkipVenv,
    [switch]$SkipDependencies
)

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
function Write-Info {
    param([string]$Message)
    Write-Host "[INFO] $Message" -ForegroundColor Blue
}

function Write-Success {
    param([string]$Message)
    Write-Host "[SUCCESS] $Message" -ForegroundColor Green
}

function Write-Warning {
    param([string]$Message)
    Write-Host "[WARNING] $Message" -ForegroundColor Yellow
}

function Write-Error {
    param([string]$Message)
    Write-Host "[ERROR] $Message" -ForegroundColor Red
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PowerShell –≤–µ—Ä—Å–∏–∏
function Test-PowerShellVersion {
    Write-Info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ PowerShell..."
    
    $version = $PSVersionTable.PSVersion
    if ($version.Major -lt 5) {
        Write-Error "–¢—Ä–µ–±—É–µ—Ç—Å—è PowerShell 5.0 –∏–ª–∏ –Ω–æ–≤–µ–µ. –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $version"
        exit 1
    }
    
    Write-Success "PowerShell –≤–µ—Ä—Å–∏—è: $version"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Python
function Test-Python {
    Write-Info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Python..."
    
    try {
        $pythonVersion = python --version 2>&1
        if ($LASTEXITCODE -eq 0) {
            Write-Success "Python –Ω–∞–π–¥–µ–Ω: $pythonVersion"
            return $true
        }
    }
    catch {
        Write-Warning "Python –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ PATH"
    }
    
    return $false
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python —á–µ—Ä–µ–∑ winget
function Install-Python {
    Write-Info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python —á–µ—Ä–µ–∑ winget..."
    
    try {
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è winget
        winget --version | Out-Null
        if ($LASTEXITCODE -eq 0) {
            Write-Info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python 3.11..."
            winget install Python.Python.3.11
            Write-Success "Python —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        } else {
            Write-Error "winget –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python –≤—Ä—É—á–Ω—É—é —Å https://python.org"
            exit 1
        }
    }
    catch {
        Write-Error "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Python. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤—Ä—É—á–Ω—É—é —Å https://python.org"
        exit 1
    }
}

# –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
function New-VirtualEnvironment {
    Write-Info "–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    if (Test-Path "venv") {
        Write-Warning "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –£–¥–∞–ª–µ–Ω–∏–µ..."
        Remove-Item -Recurse -Force "venv"
    }
    
    python -m venv venv
    Write-Success "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ"
}

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
function Enable-VirtualEnvironment {
    Write-Info "–ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    if (Test-Path "venv\Scripts\Activate.ps1") {
        & "venv\Scripts\Activate.ps1"
        Write-Success "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ"
    } else {
        Write-Error "–ù–µ —É–¥–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
        exit 1
    }
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
function Install-Dependencies {
    Write-Info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip
    python -m pip install --upgrade pip
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    pip install -r requirements.txt
    
    Write-Success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
function Set-Configuration {
    Write-Info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    
    if (-not (Test-Path ".env")) {
        if (Test-Path "env_example.txt") {
            Copy-Item "env_example.txt" ".env"
            Write-Success "–§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω –∏–∑ –ø—Ä–∏–º–µ—Ä–∞"
        } else {
            Write-Error "–§–∞–π–ª env_example.txt –Ω–µ –Ω–∞–π–¥–µ–Ω"
            exit 1
        }
    } else {
        Write-Warning "–§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    }
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
    if (-not (Test-Path "data")) {
        New-Item -ItemType Directory -Path "data"
        Write-Success "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è data —Å–æ–∑–¥–∞–Ω–∞"
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
function Test-Configuration {
    Write-Info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    
    if (-not (Test-Path ".env")) {
        Write-Error "–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    }
    
    $envContent = Get-Content ".env" -Raw
    if ($envContent -match "TELEGRAM_TOKEN=your_bot_token_here") {
        Write-Warning "–¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å .env —Ñ–∞–π–ª"
    } else {
        Write-Success "–¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    }
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
function Test-Installation {
    Write-Info "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
    $pythonVersion = python --version
    Write-Success "Python: $pythonVersion"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ pip
    $pipVersion = pip --version
    Write-Success "Pip: $pipVersion"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤
    try {
        python -c "
import sys
try:
    import aiogram
    import feedparser
    import requests
    import schedule
    print('‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ')
except ImportError as e:
    print(f'‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}')
    sys.exit(1)
"
        Write-Success "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ"
    }
    catch {
        Write-Error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏–º–ø–æ—Ä—Ç–æ–≤"
        exit 1
    }
}

# –í—ã–≤–æ–¥ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
function Show-Instructions {
    Write-Info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    Write-Host ""
    Write-Host "üéâ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É!" -ForegroundColor Green
    Write-Host ""
    Write-Host "–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:" -ForegroundColor Yellow
    Write-Host "1. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env –∏ –¥–æ–±–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞:"
    Write-Host "   notepad .env"
    Write-Host ""
    Write-Host "2. –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ:"
    Write-Host "   .\venv\Scripts\Activate.ps1"
    Write-Host ""
    Write-Host "3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞:"
    Write-Host "   python bot.py"
    Write-Host ""
    Write-Host "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:" -ForegroundColor Blue
    Write-Host "‚Ä¢ README.md - –æ—Å–Ω–æ–≤–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è"
    Write-Host "‚Ä¢ GETTING_STARTED.md - –ø–æ–¥—Ä–æ–±–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ"
    Write-Host "‚Ä¢ ARCHITECTURE.md - –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞"
    Write-Host ""
    Write-Host "–£–¥–∞—á–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è! üöÄ" -ForegroundColor Green
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function Main {
    Write-Host ""
    Write-Host "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó" -ForegroundColor Blue
    Write-Host "‚ïë              üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram-–±–æ—Ç–∞                     ‚ïë" -ForegroundColor Blue
    Write-Host "‚ïë              –ê–≥—Ä–µ–≥–∞—Ç–æ—Ä —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π                  ‚ïë" -ForegroundColor Blue
    Write-Host "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù" -ForegroundColor Blue
    Write-Host ""
    
    Test-PowerShellVersion
    
    if (-not $SkipPyenv) {
        if (-not (Test-Python)) {
            Install-Python
        }
    }
    
    if (-not $SkipVenv) {
        New-VirtualEnvironment
        Enable-VirtualEnvironment
    }
    
    if (-not $SkipDependencies) {
        Install-Dependencies
    }
    
    Set-Configuration
    Test-Configuration
    Test-Installation
    Show-Instructions
}

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
Main
