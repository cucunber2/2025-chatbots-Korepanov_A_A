"""
–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""

from typing import List, Dict, Optional
from config.settings import Settings


class MessageFormatter:
    """–ö–ª–∞—Å—Å –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞"""
    
    @staticmethod
    def format_welcome_message() -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
        return """
üì∞ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç-–∞–≥—Ä–µ–≥–∞—Ç–æ—Ä —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π!

–Ø –ø–æ–º–æ–≥—É –≤–∞–º:
‚Ä¢ –ü–æ–ª—É—á–∞—Ç—å —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–º —Ç–µ–º–∞–º
‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –¥–∞–π–¥–∂–µ—Å—Ç—ã
‚Ä¢ –ò—Å–∫–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
‚Ä¢ –°–æ—Ö—Ä–∞–Ω—è—Ç—å –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏–µ—Å—è —Å—Ç–∞—Ç—å–∏

–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/help - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã
/addtopic [—Ç–µ–º–∞] - –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–º—É
/removetopic [—Ç–µ–º–∞] - —É–¥–∞–ª–∏—Ç—å —Ç–µ–º—É
/mytopics - –º–æ–∏ —Ç–µ–º—ã
/latest - –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏
/search [–∑–∞–ø—Ä–æ—Å] - –ø–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π
/favorites - –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
/save [–Ω–æ–º–µ—Ä] - —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ

–ù–∞—á–Ω–∏—Ç–µ —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏—Ö —Ç–µ–º!
"""
    
    @staticmethod
    def format_help_message() -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–ø—Ä–∞–≤–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
        return """
üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:

/start - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ
/help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

üìö –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–º–∞–º–∏:
/addtopic [—Ç–µ–º–∞] - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Ç–µ–º—É
/removetopic [—Ç–µ–º–∞] - —É–¥–∞–ª–∏—Ç—å —Ç–µ–º—É
/mytopics - –ø–æ–∫–∞–∑–∞—Ç—å –º–æ–∏ —Ç–µ–º—ã

üì∞ –ü—Ä–æ—Å–º–æ—Ç—Ä –Ω–æ–≤–æ—Å—Ç–µ–π:
/latest - –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –Ω–æ–≤–æ—Å—Ç–µ–π
/search [–∑–∞–ø—Ä–æ—Å] - –Ω–∞–π—Ç–∏ –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º

‚≠ê –ò–∑–±—Ä–∞–Ω–Ω–æ–µ:
/favorites - –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
/save [–Ω–æ–º–µ—Ä] - —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ

–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–º—ã: —ç–∫–æ–Ω–æ–º–∏–∫–∞, —Ñ–∏–Ω–∞–Ω—Å—ã, —Ä—ã–Ω–∫–∏, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏
"""
    
    @staticmethod
    def format_topics_list(topics: List[str]) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ —Ç–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if topics:
            topics_text = "üìö –í–∞—à–∏ —Ç–µ–º—ã:\n" + "\n".join(f"‚Ä¢ {topic}" for topic in topics)
        else:
            topics_text = "üìö –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ç–µ–º. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /addtopic –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è"
        
        return topics_text
    
    @staticmethod
    def format_news_list(news_list: List[Dict], title: str = "üì∞ –ù–æ–≤–æ—Å—Ç–∏", limit: int = 10, page: int = 1) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –Ω–æ–≤–æ—Å—Ç–µ–π"""
        if not news_list:
            return "‚ùå –ù–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        
        response = f"{title} (–°—Ç—Ä–∞–Ω–∏—Ü–∞ {page}):\n\n"
        for i, news in enumerate(news_list, 1):
            response += f"{i + (page-1) * limit}. {news['title']}\n"
            response += f"   üìÖ {news['source']} | {news['topic']}\n"
            response += f"   üìù {news['description'][:100]}...\n"
            response += f"   üîó {news['link']}\n\n"
        
        return response
    
    @staticmethod
    def format_search_results(query: str, results: List[Dict]) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞"""
        if not results:
            return f"‚ùå –ü–æ –∑–∞–ø—Ä–æ—Å—É '{query}' –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
        
        response = f"üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É '{query}':\n\n"
        for i, news in enumerate(results, 1):
            response += f"{i}. {news['title']}\n"
            response += f"   üìÖ {news['source']} | {news['topic']}\n"
            response += f"   üìù {news['description'][:100]}...\n"
            response += f"   üîó {news['link']}\n\n"
        
        return response
    
    @staticmethod
    def format_favorites(favorites: List[Dict]) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ"""
        if not favorites:
            return "‚≠ê –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π"
        
        response = "‚≠ê –í–∞—à–∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏:\n\n"
        for i, news in enumerate(favorites, 1):
            response += f"{i}. {news['title']}\n"
            response += f"   üìÖ {news['source']} | {news['topic']}\n"
            response += f"   üìù {news['description'][:100]}...\n"
            response += f"   üîó {news['link']}\n\n"
        
        return response
    
    @staticmethod
    def format_daily_digest(news_list: List[Dict]) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –¥–∞–π–¥–∂–µ—Å—Ç"""
        if not news_list:
            return "üì∞ –ù–∞ —Å–µ–≥–æ–¥–Ω—è –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–µ—Ç"
        
        digest_text = f"üì∞ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –¥–∞–π–¥–∂–µ—Å—Ç –Ω–æ–≤–æ—Å—Ç–µ–π\n\n"
        for i, news in enumerate(news_list, 1):
            digest_text += f"{i}. {news['title']}\n"
            digest_text += f"   üìÖ {news['source']} | {news['topic']}\n"
            digest_text += f"   üìù {news['description'][:100]}...\n"
            digest_text += f"   üîó {news['link']}\n\n"
        
        return digest_text
    
    @staticmethod
    def format_error_message(error_type: str, details: str = "") -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ"""
        error_messages = {
            'no_topics': "‚ùå –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ —Ç–µ–º—ã –∫–æ–º–∞–Ω–¥–æ–π /addtopic",
            'invalid_topic': f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ç–µ–º–∞. –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–º—ã: {', '.join(Settings.AVAILABLE_TOPICS)}",
            'topic_already_exists': "‚ö†Ô∏è –≠—Ç–∞ —Ç–µ–º–∞ —É–∂–µ –±—ã–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Ä–∞–Ω–µ–µ",
            'topic_not_found': "‚ö†Ô∏è –≠—Ç–∞ —Ç–µ–º–∞ –Ω–µ –±—ã–ª–∞ –Ω–∞–π–¥–µ–Ω–∞ –≤ –≤–∞—à–µ–º —Å–ø–∏—Å–∫–µ",
            'invalid_news_number': "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –Ω–æ–≤–æ—Å—Ç–∏",
            'news_already_saved': "‚ö†Ô∏è –≠—Ç–∞ –Ω–æ–≤–æ—Å—Ç—å —É–∂–µ –±—ã–ª–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ —Ä–∞–Ω–µ–µ",
            'missing_query': "‚ùå –£–∫–∞–∂–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å. –ü—Ä–∏–º–µ—Ä: /search —ç–∫–æ–Ω–æ–º–∏–∫–∞",
            'missing_topic': "‚ùå –£–∫–∞–∂–∏—Ç–µ —Ç–µ–º—É. –ü—Ä–∏–º–µ—Ä: /addtopic —ç–∫–æ–Ω–æ–º–∏–∫–∞",
            'missing_news_number': "‚ùå –£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –Ω–æ–≤–æ—Å—Ç–∏. –ü—Ä–∏–º–µ—Ä: /save 1"
        }
        
        base_message = error_messages.get(error_type, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")
        if details:
            return f"{base_message}\n{details}"
        return base_message
    
    @staticmethod
    def format_success_message(message_type: str, details: str = "") -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ"""
        success_messages = {
            'topic_added': "‚úÖ –¢–µ–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞!",
            'topic_removed': "‚úÖ –¢–µ–º–∞ —É–¥–∞–ª–µ–Ω–∞!",
            'news_saved': "‚úÖ –ù–æ–≤–æ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!",
            'news_removed': "‚úÖ –ù–æ–≤–æ—Å—Ç—å —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ!"
        }
        
        base_message = success_messages.get(message_type, "‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        if details:
            return f"{base_message}\n{details}"
        return base_message
    
    @staticmethod
    def format_available_topics() -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–µ–º"""
        return f"üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–º—ã: {', '.join(Settings.AVAILABLE_TOPICS)}"
    
    @staticmethod
    def format_news_range(max_number: int) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∏–∞–ø–∞–∑–æ–Ω –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤ –Ω–æ–≤–æ—Å—Ç–µ–π"""
        return f"–î–æ—Å—Ç—É–ø–Ω–æ: 1-{max_number}"
